// Generated by Dagger (https://dagger.dev).
package com.example.picsar.picsar.di;

import com.example.picsar.picsar.data.ApiService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import retrofit2.Retrofit;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ApiServiceFactory implements Factory<ApiService> {
  private final Provider<Retrofit> retrofitProvider;

  public AppModule_ApiServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public ApiService get() {
    return apiService(retrofitProvider.get());
  }

  public static AppModule_ApiServiceFactory create(Provider<Retrofit> retrofitProvider) {
    return new AppModule_ApiServiceFactory(retrofitProvider);
  }

  public static ApiService apiService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.apiService(retrofit));
  }
}
