// Generated by Dagger (https://dagger.dev).
package com.example.picsar.picsar.di;

import com.example.picsar.picsar.data.ApiService;
import com.example.picsar.picsar.data.repository.GetPhotosRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesPhotosRepoFactory implements Factory<GetPhotosRepo> {
  private final Provider<ApiService> apiServiceProvider;

  public AppModule_ProvidesPhotosRepoFactory(Provider<ApiService> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public GetPhotosRepo get() {
    return providesPhotosRepo(apiServiceProvider.get());
  }

  public static AppModule_ProvidesPhotosRepoFactory create(
      Provider<ApiService> apiServiceProvider) {
    return new AppModule_ProvidesPhotosRepoFactory(apiServiceProvider);
  }

  public static GetPhotosRepo providesPhotosRepo(ApiService apiService) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesPhotosRepo(apiService));
  }
}
