// Generated by Dagger (https://dagger.dev).
package com.example.picsar.picsar.di;

import com.example.picsar.picsar.data.ApiService;
import com.example.picsar.picsar.data.repository.GetTopicPhotosRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvidesGetTopicPhotosFactory implements Factory<GetTopicPhotosRepo> {
  private final Provider<ApiService> apiServiceProvider;

  public AppModule_ProvidesGetTopicPhotosFactory(Provider<ApiService> apiServiceProvider) {
    this.apiServiceProvider = apiServiceProvider;
  }

  @Override
  public GetTopicPhotosRepo get() {
    return providesGetTopicPhotos(apiServiceProvider.get());
  }

  public static AppModule_ProvidesGetTopicPhotosFactory create(
      Provider<ApiService> apiServiceProvider) {
    return new AppModule_ProvidesGetTopicPhotosFactory(apiServiceProvider);
  }

  public static GetTopicPhotosRepo providesGetTopicPhotos(ApiService apiService) {
    return Preconditions.checkNotNullFromProvides(AppModule.INSTANCE.providesGetTopicPhotos(apiService));
  }
}
